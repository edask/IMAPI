<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2014 Institute of Computer Science,
               Foundation for Research and Technology - Hellas.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=============================================================================
Contact: 
=============================================================================
Address: N. Plastira 100 Vassilika Vouton, GR-700 13 Heraklion, Crete, Greece
    Tel: +30-2810-391632
    Fax: +30-2810-391638
 E-mail: isl@ics.forth.gr
WebSite: http://www.ics.forth.gr/isl/

=============================================================================
Authors: 
=============================================================================
Elias Tzortzakakis <tzortzak@ics.forth.gr>

-->
<Root>        
    <ValidCidocNamespaces>
        <Namespace>http://www.cidoc-crm.org/cidoc-crm/</Namespace>
        <Namespace>http://erlangen-crm.org/current/</Namespace>
        <Namespace>http://erlangen-crm.org/140220/</Namespace>
        <Namespace>http://erlangen-crm.org/120111/</Namespace>        
        <Namespace>http://purl.org/NET/crm-owl#</Namespace>
        <!--http://erlangen-crm.org/091217/</Namespace>-->
    </ValidCidocNamespaces>
    <NamespaceExtensions TargetNamespaseReplaceMent="###CIDOCNAMESPACE###">
        <!-- 
        xmlns:bmo="http://collection.britishmuseum.org/id/ontology/"
        xmlns:owl="http://www.w3.org/2002/07/owl#"
    
        <owl:ObjectProperty rdf:about="http://collection.britishmuseum.org/id/ontology/PX_nationality">
            <rdfs:subPropertyOf rdf:resource="###CIDOCNAMESPACE###P107i_is_current_or_former_member_of"/>
            <rdfs:domain rdf:resource="###CIDOCNAMESPACE###E39_Actor"/>
            <rdfs:range rdf:resource="###CIDOCNAMESPACE###E74_Group"/>
            <rdfs:label>nationality</rdfs:label>
            <rdfs:comment>This is the nationality of an E39 Actor.  It is a sub-property of P107i (is current or former member of) - thus the Nation is modelled as a group (E74)</rdfs:comment>
        </owl:ObjectProperty>
        -->
        
        <![CDATA[ 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>        
<rdf:RDF
    
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:skos="http://www.w3.org/2004/02/skos/core#"    
    xml:base="###CIDOCNAMESPACE###">
    

        <rdf:Property rdf:about="P81a_end_of_the_begin">
	<rdfs:label xml:lang="en">end of the begin</rdfs:label>
	<rdfs:label xml:lang="el">τέλος της αρχής</rdfs:label>
	<rdfs:label xml:lang="de">Ende des Anfangs</rdfs:label>
	<rdfs:label xml:lang="fr">fin du début</rdfs:label>
	<rdfs:label xml:lang="ru">конец начала</rdfs:label>
	<rdfs:label xml:lang="pt">fim do início</rdfs:label>
	<rdfs:comment>This is defined as the first boundary of the property P81</rdfs:comment>
	<rdfs:domain rdf:resource="E52_Time-Span"/>
	<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#dateTime"/>
	<rdfs:subPropertyOf rdf:resource="P81_ongoing_throughout"/>	
</rdf:Property>
<rdf:Property rdf:about="P81b_begin_of_the_end">
	<rdfs:label xml:lang="en">begin of the end</rdfs:label>
	<rdfs:label xml:lang="fr">début de la fin</rdfs:label>
	<rdfs:label xml:lang="el">αρχή του τέλους</rdfs:label>
	<rdfs:label xml:lang="de">Anfang vom Ende</rdfs:label>
	<rdfs:label xml:lang="ru">начать в конце</rdfs:label>
	<rdfs:label xml:lang="pt">começar do fim</rdfs:label>
	<rdfs:comment>This is defined as the second boundary of the property P81</rdfs:comment>
	<rdfs:domain rdf:resource="E52_Time-Span"/>
	<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#dateTime"/>
	<rdfs:subPropertyOf rdf:resource="P81_ongoing_throughout"/>	
</rdf:Property>
<rdf:Property rdf:about="P82a_begin_of_the_begin">
	<rdfs:label xml:lang="en">begin of the begin</rdfs:label>
	<rdfs:label xml:lang="fr">début du début</rdfs:label>
	<rdfs:label xml:lang="el">αρχή της αρχής</rdfs:label>
	<rdfs:label xml:lang="de">Anfang des Anfangs</rdfs:label>
	<rdfs:label xml:lang="ru">начать с начала</rdfs:label>
	<rdfs:label xml:lang="pt">começar do início</rdfs:label>
	<rdfs:comment>This is defined as the first boundary of the property P82</rdfs:comment>
	<rdfs:domain rdf:resource="E52_Time-Span"/>
	<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#dateTime"/>
	<rdfs:subPropertyOf rdf:resource="P82_at_some_time_within"/>	
</rdf:Property>
<rdf:Property rdf:about="P82b_end_of_the_end">
	<rdfs:label xml:lang="en">end of the end</rdfs:label>
	<rdfs:label xml:lang="fr">fin de la fin</rdfs:label>
	<rdfs:label xml:lang="el">τέλος του τέλους</rdfs:label>
	<rdfs:label xml:lang="de">Ende vom Ende</rdfs:label>
	<rdfs:label xml:lang="ru">конец конец</rdfs:label>
	<rdfs:label xml:lang="pt">fim do fim</rdfs:label>
	<rdfs:comment>This is defined as the second boundary of the property P82</rdfs:comment>
	<rdfs:domain rdf:resource="E52_Time-Span"/>
	<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#dateTime"/>
	<rdfs:subPropertyOf rdf:resource="P82_at_some_time_within"/>	
</rdf:Property>


        </rdf:RDF>
        ]]>
    </NamespaceExtensions>
    
    <GetAllInstances>
         <query lang="sparql">
                    <![CDATA[                     
SELECT DISTINCT ?resultInstaceUri 
{
    ?resultInstaceUri a ###BaseClass###.    
    ###FILTERURISTATEMENT###
}
ORDER BY ?resultInstaceUri 
                    ]]>
            </query>
    </GetAllInstances>
    <QuerySequencesConfiguration>
        <QuerySequence mnemonic="literal">
            <QueryStep name="stepAliteral" datatype="literal">
                <query lang="sparql">
                   <![CDATA[ 
                                       
SELECT DISTINCT ?resultInstaceUri ?stepAliteral
{
    ?resultInstaceUri a ###BaseClass### .
    { ?resultInstaceUri rdfs:label ?stepAliteral . }
    UNION
    { ?resultInstaceUri rdf:value ?stepAliteral . }
    
}
ORDER BY ?resultInstaceUri ?stepAliteral

                    ]]>
                    </query>                
            </QueryStep>
        </QuerySequence>
        <QuerySequence mnemonic="uri(a)">
            <QueryStep name="stepAliteral" datatype="uri">
                <query lang="sparql">
                   <![CDATA[ 
                                       
SELECT DISTINCT ?resultInstaceUri ?stepAliteral
{
    ?resultInstaceUri a ###BaseClass### .
    ###FILTERURISTATEMENT###
    ?stepAliteral ###UNSETPID:a### ?resultInstaceUri .                   
    
}
ORDER BY ?resultInstaceUri ?stepAliteral

                    ]]>
                    </query>                
            </QueryStep>
        </QuerySequence>
        <QuerySequence mnemonic="literal(a)">            
            <QueryStep name="stepAliteral" datatype="literal">
                <query lang="sparql">
                   <![CDATA[ 
                                       
SELECT DISTINCT ?resultInstaceUri ?stepAliteral
{
    ?resultInstaceUri a ###BaseClass### .
    ?stepAliteral ###UNSETPID:a### ?resultInstaceUri .                       
    
}
ORDER BY ?resultInstaceUri ?stepAliteral

                    ]]>
                    </query>                
            </QueryStep>
        </QuerySequence>
        <QuerySequence mnemonic="uri(a) -> literal">
            <QueryStep name="stepAuri" datatype="uri">
                <query lang="sparql">
                    <![CDATA[ 
                    
SELECT DISTINCT ?resultInstaceUri ?stepAuri
{
    ?resultInstaceUri a ###BaseClass### .
    ###FILTERURISTATEMENT###
    
    ?stepAuri ###UNSETPID:a### ?resultInstaceUri .        
    
}
ORDER BY ?resultInstaceUri ?stepAuri
                    ]]>
                </query>                
            </QueryStep>
            <QueryStep name="stepBliteral" datatype="literal">
                    <query lang="sparql">
                    <![CDATA[ 
                    
SELECT DISTINCT ?resultInstaceUri ?stepBliteral
{
    ?resultInstaceUri a ###BaseClass### .
    #{		
    #    ?resultInstaceUri rdfs:label ?stepBliteral .
    #}
    #UNION 
    #{    
        ?stepAuri ###UNSETPID:a### ?resultInstaceUri .           
        { ?stepAuri rdfs:label ?stepBliteral . }
        UNION
        { ?stepAuri rdf:value ?stepBliteral . }
    #}  	    
}
ORDER BY ?resultInstaceUri ?stepBliteral

                    ]]>
                    </query>                
            </QueryStep>
        </QuerySequence>
        
        <QuerySequence mnemonic="uri(a1 | a1 -> a2) -> uri(b)">
        <!--<QuerySequence mnemonic="uri(a1 | a1 -> a2) -> uri(b) -> uri(c) -> literal">-->
            <QueryStep name="stepAuri" datatype="uri">
                
                <query lang="sparql">
                    <![CDATA[ 

SELECT DISTINCT ?resultInstaceUri ?stepAuri
{
    ?resultInstaceUri a ###BaseClass### .
    ###FILTERURISTATEMENT###
    {
        ?stepAuri ###UNSETPID:a1### ?resultInstaceUri .
    }
    UNION
    {
            ?result1 ###UNSETPID:a1### ?resultInstaceUri .
            ?result1 ###UNSETPID:a2### ?stepAuri .                       
    }
}
ORDER BY ?resultInstaceUri ?stepAuri
                        ]]>
                </query>
            </QueryStep>            
            <QueryStep name="stepBuri" datatype="uri">
                
                <query lang="sparql">
                    <![CDATA[ 

SELECT DISTINCT ?resultInstaceUri ?stepBuri
{
    ?resultInstaceUri a ###BaseClass### .
    ###FILTERURISTATEMENT###
    {
        {
            ?stepAuri ###UNSETPID:a1### ?resultInstaceUri .
        }
        UNION
        {
                ?result1 ###UNSETPID:a1### ?resultInstaceUri .
                ?result1 ###UNSETPID:a2### ?stepAuri .                
        }
    }
    ?stepAuri ###UNSETPID:b### ?stepBuri .
    
}
ORDER BY ?resultInstaceUri ?stepBuri
                        ]]>
                </query>
            </QueryStep>    
            <!--<QueryStep name="stepCuri" datatype="uri">
                
                <query lang="sparql">
                    <![CDATA[ 

SELECT DISTINCT ?resultInstaceUri ?stepCuri
{
    ?resultInstaceUri a ###BaseClass### .
    ###FILTERURISTATEMENT###
    {
        {
            ?stepAuri ###UNSETPID:a1### ?resultInstaceUri .
        }
        UNION
        {
                ?result1 ###UNSETPID:a1### ?resultInstaceUri .
                ?result1 ###UNSETPID:a2### ?stepAuri .                
        }
    }
    ?stepAuri ###UNSETPID:b### ?stepBuri .
    ?stepBuri ###UNSETPID:c### ?stepCuri .
    
    
}
ORDER BY ?resultInstaceUri ?stepCuri
                        ]]>
                </query>
            </QueryStep>    
            <QueryStep name="stepDliteral" datatype="literal">                
                <query lang="sparql">
                    <![CDATA[ 

SELECT DISTINCT ?resultInstaceUri ?stepDliteral
{
    ?resultInstaceUri a ###BaseClass### .
    ###FILTERURISTATEMENT###
    {
        {
            ?stepAuri ###UNSETPID:a1### ?resultInstaceUri .
        }
        UNION
        {
                ?result1 ###UNSETPID:a1### ?resultInstaceUri .
                ?result1 ###UNSETPID:a2### ?stepAuri .                
        }
    }
    ?stepAuri ###UNSETPID:b### ?stepBuri .
    ?stepBuri ###UNSETPID:c### ?stepCuri .
    ?stepCuri rdfs:label ?stepDliteral .
    
}
ORDER BY ?resultInstaceUri ?stepDliteral
                        ]]>
                </query>
            </QueryStep>         
            -->       
        </QuerySequence>
        
        <QuerySequence mnemonic="uri(a) -> uri(b) -> timespan(c1 - c2)">
            <QueryStep name="stepAuri" datatype="uri">
                <query lang="sparql">
                    <![CDATA[ 
SELECT DISTINCT  ?actor ?stepAuri
WHERE 
{
    ?actor a ###BaseClass### .    
    ###FILTERURISTATEMENT###
    ?actor ###UNSETPID:a### ?stepAuri .    
}
ORDER BY  ?actor ?stepAuri     

            ]]>
                </query> 
            </QueryStep>
            <QueryStep name="stepBuri" datatype="uri">
                <query lang="sparql">
                    <![CDATA[ 
SELECT DISTINCT  ?actor ?stepBuri
WHERE 
{
    ?actor a ###BaseClass### .
    ###FILTERURISTATEMENT###
    ?actor ###UNSETPID:a### ?stepAuri .
    ?stepAuri ###UNSETPID:b### ?stepBuri .
    
}
ORDER BY  ?actor ?stepBuri     

            ]]>
                </query> 
            </QueryStep>
            <QueryStep name="stepCtimespan" datatype="timespan">
                    <query lang="sparql">
                    <![CDATA[ 
SELECT DISTINCT  ?actor ( CONCAT(CONCAT(IF(bound(?beginParam), STR(?beginParam), ""), " - "), IF(bound(?endParam), STR(?endParam), "") ) AS ?stepCtimespan) 
WHERE 
{
    ?actor a ###BaseClass### .
    ?actor ###UNSETPID:a### ?stepAuri .
    ?stepAuri ###UNSETPID:b### ?stepBuri .
    OPTIONAL{ ?stepBuri ###UNSETPID:c1### ?beginParam . }
    OPTIONAL{ ?stepBuri ###UNSETPID:c2### ?endParam . }
    FILTER ( (!BOUND(?beginParam) && BOUND(?endParam) ) || (!BOUND(?endParam) && BOUND(?beginParam) ) ||  ?beginParam <= ?endParam) .                    
  
    
}
ORDER BY  ?actor ?stepCtimespan     

            ]]>
                    </query> 
            </QueryStep>
        </QuerySequence>
        
    </QuerySequencesConfiguration>    
    
</Root>